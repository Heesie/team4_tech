<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>

    <link rel="stylesheet" href="/static/basis.css">
</head>
<body>
    <%- include('header') %>

    <section class="grid-page">
        <div class="content">
            <h1>Match & Cook: Find Your Perfect Cooking Partner!</h1>
            <p>Like your favorite recipes and match with others who share your taste. Discover delicious dishes together and cook like a pro!</p>
        </div>
    
        <img src="/images/cooking.svg" alt="Cooking illustration" class="cooking-image">
    
        <div class="actions">
            <div class="search-div">
                <form action="/recipes" method="GET">
                    <input placeholder="Search here" type="text" name="q" class="input">
                    <input type="submit" id="submit-button" value="Search">
                </form>
            </div>
    
            <a href="/recipes">
                 See all recipes
                 <svg width="25px" height="25px" viewBox="0 0 24 24" fill="#007BFF" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.2328 16.4569C12.9328 16.7426 12.9212 17.2173 13.2069 17.5172C13.4926 17.8172 13.9673 17.8288 14.2672 17.5431L13.2328 16.4569ZM19.5172 12.5431C19.8172 12.2574 19.8288 11.7827 19.5431 11.4828C19.2574 11.1828 18.7827 11.1712 18.4828 11.4569L19.5172 12.5431ZM18.4828 12.5431C18.7827 12.8288 19.2574 12.8172 19.5431 12.5172C19.8288 12.2173 19.8172 11.7426 19.5172 11.4569L18.4828 12.5431ZM14.2672 6.4569C13.9673 6.17123 13.4926 6.18281 13.2069 6.48276C12.9212 6.78271 12.9328 7.25744 13.2328 7.5431L14.2672 6.4569ZM19 12.75C19.4142 12.75 19.75 12.4142 19.75 12C19.75 11.5858 19.4142 11.25 19 11.25V12.75ZM5 11.25C4.58579 11.25 4.25 11.5858 4.25 12C4.25 12.4142 4.58579 12.75 5 12.75V11.25ZM14.2672 17.5431L19.5172 12.5431L18.4828 11.4569L13.2328 16.4569L14.2672 17.5431ZM19.5172 11.4569L14.2672 6.4569L13.2328 7.5431L18.4828 12.5431L19.5172 11.4569ZM19 11.25L5 11.25V12.75L19 12.75V11.25Z" />
                    </svg></a>
        </div>
    </section>
    
    
    <section class="home-screen-h2">
        <h2>Explore random recipes</h2>
    </section>
    
                
    <section class="recipe-grid">
      <% if (recipes && recipes.length > 0) { %> 
          <% recipes.forEach(recipe => { %>
              <div class="recipe">
                  <img src="<%= recipe.thumbnail_url || '/images/default-recipe.jpg' %>" alt="Image of the recipe" class="recipe-image">
                  <h3><%= recipe.name %></h3>
                  <p class="recipe-description"><%= recipe.description || "No discription available" %></p>
  
                  <form action="/toggle-like/<%= recipe._id %>" method="POST" class="like-form">
                      <input type="hidden" name="recipeId" value="<%= recipe._id %>">
                      <input type="hidden" name="recipeName" value="<%= recipe.name %>">
                      
          
                      <button type="submit" class="like-button <%= recipe.isLiked ? 'liked' : '' %>">
                          <svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                              <path d="M34,9c-4.2,0-7.9,2.1-10,5.4C21.9,11.1,18.2,9,14,9C7.4,9,2,14.4,2,21c0,11.9,22,24,22,24s22-12,22-24
                                  C46,14.4,40.6,9,34,9z"/>
                          </svg>
                      </button>
                  </form>                            

                  <a href="/recipe/<%= recipe._id %>">
                      <button>Full Recipe</button>
                  </a>
              
              </div>
          <% }) %>
      <% } else { %>
          <p>No recipes found.</p>
      <% } %>
  </section>



<style>
   
  .home-screen-h2 {
    align-items: center;
    display: flex;
    justify-content: center;
  }



  .grid-page img {
    width: 30em;
    max-width: 100%;
  }
  

  .grid-page content {
    grid-column-start: 1/2;

  }

  .grid-page h1 {
    font-size: clamp(2rem, 3vw, 9rem);
}

.grid-page p {
    font-size: clamp(1rem, 1.5vw, 2.5rem);
}

.grid-page .actions {
  grid-column-start: 2/3;
  align-self: start;
}

.search-div {
  margin-bottom: 2em;
  gap: 1em;
}

  .grid-page {
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
margin-left: 10em;
margin-right: 10em;
margin-top: -2em;


  }

/* search input and submit buttons  */
.actions .input {
  width: 100%;
  max-width: 220px;
  padding: 12px;
  border-radius: var(--border-radius-big);
  border: var(--color-input-border);
  outline: none;
  transition: all 0.5s ease;
  box-shadow: var(--box-shadow);
  cursor: pointer;
}

.actions .input:hover {
  border: var(--color-input-border-hover);
  box-shadow: var(--box-shadow);
}

.actions .input:active {
  transform: scale(1.20);

}

.actions input::placeholder {
  color: gray;
  transition: color 0.3s ease-in-out;
}

input:hover::placeholder,
input:focus::placeholder {
  color:var(--color-text-desktop);
}

.actions .input:focus {
  border: var(--color-input-border-hover);

}

.actions #submit-button {
  border: none;
  background-color: var(--background-color-button);
  color: var(--color-text-white);
  border-radius: var(--border-radius-small);
  cursor: pointer;
  padding: 10px 15px;
  transition: background 0.3s ease;
}

.actions #submit-button:hover {
background-color: var(--background-color-button-hover);
}






.actions a{
  display: flex;
  align-items: center;
  gap: 5px;
}

.actions a {
  text-decoration: none;
  color: var(--link-color-text);
}



/* responsive home screen */

@media (max-width: 768px){
  .grid-page {
    grid-template-columns: 1fr;
    margin: 0;
padding: 40px;
  }
  content h1 {
    font-size: 20px;
  }
}


@media(max-width:1080px){
  .grid-page{
    margin-top: 1em;
  }
}






/* grid for the recipe template */

.recipe-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 50px;
    padding: 20px;
    }
    
    
    .recipe {
    position: relative;
    display: flex;
    flex-direction: column;
    background: var(--background-recept-cards);
    padding: 15px;
    border-radius: 10px;
    box-shadow: var(--box-shadow);
    }

    .recipe h3 {
    margin-top: 20px;
    font-size: 18px;
    font-weight: bold;
    }
    
    .recipe-description {
    font-size: 14px;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2; /* Let us see 2 rows of text from the API */
    overflow: hidden;
    }
    
    .recipe a button {
    background-color: var(--background-color-button);
    color: var(--text-color-button);
    border: none;
    padding: 10px;
    width: 100%;
    border-radius: var(--border-radius-small);
    cursor: pointer;
    margin-top: auto;
    }
    
    .recipe a button:hover {
    background-color: var(--background-color-button-hover);
    }
    
    .recipe-image {
      width: 100%;            
      height: 200px;          
      object-fit: cover; 
    border-radius: var(--border-radius-big);
    position: relative; 
  
  }
    
    /* End of the recipe grid */
    /* Like function */
    .like-form {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 10;
}

/* style for the like function */
.like-button {
    background-color: var(--background-recept-cards);
    border: none;
    cursor: pointer;
    border-radius: var(--border-radius-small);
    transition: transform 0.9s ease, fill 0.3s ease;
}

/* static heart */
.like-button svg {
    cursor: pointer;
    width: 24px;
    height: 24px;
    fill: var(--fill-heart-color);
    transition: transform 0.3s ease, fill 0.3s ease;
    padding: 5px;
    border-radius: var(--border-radius-medium);
}

/* animation effect by liking */

.like-button svg:hover{
    fill: var(--background-color-tag-noti);
    transform: scale(1.3);
    transition: 500ms;
}
.like-button:active svg {
    fill: var(--fill-heart-color-hover);
    transition: 700ms;
}
 
.like-button.liked svg {
    fill: var(--fill-heart-color-hover);
    transform: scale(1.1);
}
 
 
 
 
.recipe-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 50px;
    padding: 20px;
    }
    /* end like function */
    
    

    
    /* notifcation  */
    .notification {
      position: fixed;  
      top: 100px;
      right: -400px; 
      background: var(--background-color-tag-noti);
      color: var(--color-text-white);
      border-radius:var(--border-radius-small);
      font-size: 14px;
      padding-top: 15px;
      padding-left: 10px;
      padding-right: 10px;
      padding-bottom: 15px;
      transition: right 0.5s ease-in-out, opacity 0.5s ease-in-out;  
      box-shadow: var(--box-shadow);
      z-index: 9999;  
      opacity: 0; 
      margin-left: 3em;
    }
    
    .notification.show {
      right: 20px;  
      opacity: 1;  
    }
    
    .notification.hide {
      right: -400px; 
      opacity: 0;   
      pointer-events: none; 
    }
     
 
</style>
<script>
  
// Like notification 
document.querySelectorAll('.like-form').forEach(form => {
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        const recipeName = this.querySelector('input[name="recipeName"]').value;
        
        // Toon de notificatie
        showNotification(recipeName);
        
        // Verstuur het formulier na 100ms (zodat de notificatie zichtbaar wordt)
        setTimeout(() => this.submit(), 100);
    });
});

function showNotification(recipeName) {
    const notification = document.createElement("div");
    notification.className = "notification";
    notification.textContent = `"${recipeName}" is toegevoegd aan je favorieten!`;
    document.body.appendChild(notification);
    
    // Laat de notificatie verschijnen
    setTimeout(() => notification.classList.add("show"), 10);
    
    // Verwijder na 3 seconden
    setTimeout(() => {
        notification.classList.remove("show");
        setTimeout(() => notification.remove(), 300);
    }, 8000);
}



document.querySelectorAll(".like-checkbox").forEach(box => 
    box.addEventListener("change", () => {
        if (box.checked) {
            const receptName = box.closest(".recept").querySelector("h3").textContent;
            showNotification(receptName);
        }
    })
);
// like notification
</script>
</body>
</html>
