<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recipe</title>
    <link rel="stylesheet" href="/styles/basis.css">
    <style>
   
    </style>
</head>
<body>
    <%- include('header') %>

    <main>
        <div class="back">
        <a href="/recipes">
            <button>Go back</button>
        </a>
    </div>


    <div class="recipe">
        <section class="grid-wrap">
        <div class="image-container">
            <img loading="lazy" src="<%= recipe.thumbnail_url || '/images/default-recipe.jpg' %>" alt="image of the recipe" class="recipe-afbeelding">
            <h2><%= recipe.name %></h2>

                <form action="/toggle-like/<%= recipe._id %>" method="POST" class="like-form">
                    <input type="hidden" name="recipeId" value="<%= recipe._id %>">
                    <input type="hidden" name="recipeName" value="<%= recipe.name %>">
                    
        
                    <button type="submit" class="like-button <%= recipe.isLiked ? 'liked' : '' %>">
                        <svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                            <path d="M34,9c-4.2,0-7.9,2.1-10,5.4C21.9,11.1,18.2,9,14,9C7.4,9,2,14.4,2,21c0,11.9,22,24,22,24s22-12,22-24
                                C46,14.4,40.6,9,34,9z"/>
                        </svg>
                    </button>
                </form>     
    </div>

        <div class="info">
                <span><%= recipe.total_time_minutes %> Minutes</span>
                <span><%= recipe.num_servings %> Servings</span>
                <span><%= recipe.nutrition.calories %> kcal</span>
        </div>
    </section>

        <section class="information">
            <section class="ingredients">
                <details class="summary-details">

                    <summary>Ingredients</summary>
                    <ul>
                        <% recipe.ingredients.forEach(function(ingredient) { %>
                            <li><%= ingredient.quantity %> <%= ingredient.name %></li>
                        <% }); %>
                    </ul>
                </details>
            </section>

            <section class="instructions">
                <details class="summary-details">

                  <summary>Recipe</summary>
                  <ol>
                    <% recipe.instructions.forEach(function(step) { %>
                      <li><%= step.text %></li>
                    <% }); %>
                  </ol>
                </details>
              </section>
        </section>
    </div>








    <section class="liked-users">
      <div class="information-liked-users">
        <h5>Users that liked this recipe:</h5>
        <p>Make a match and a connection</p>
      </div>
      <div id="users-who-liked" data-recipe-id="<%= recipe._id %>" class="user-list"></div>
    </section>
    

</main>
<style>
/* user liked recipe */


.liked-users {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 20px;
  background-color: var(--background-recept-cards);
  border-radius: var(--border-radius-small);
  box-shadow: var(--box-shadow);
  margin: 2em;
}

.information-liked-users {
  text-align: center;
}

.information-liked-users h5 {
  font-size: 20px;
  margin: 0;
}

.information-liked-users p {
  font-size: 16px;
  margin-top: 5px;
}

#users-who-liked {
  display: flex;
  justify-content: center; 
  gap: 60px;
  flex-wrap: wrap;
}

.user-list .user {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 18px;
  font-weight: bold;
  cursor: pointer;
  transition: transform 0.2s;
}

.user-list .user:hover {
  transform: scale(1.1);
}

@media (max-width: 768px) {
  #users-who-liked {
    flex-direction: column; 
    gap: 20px;
  }
}


@media (min-width: 769px) {
  #users-who-liked {
    flex-direction: row;
  }
}


   main {
    display: grid;
    grid-template-columns: 1fr;
  }

.back{
    padding: 20px;
}

.back button{ 
border: none;
background-color: var(--background-color-button);
color: var(--color-text-white);
padding: 5px 10px;
border-radius: var(--border-radius-small);
}

.recipe {
    max-width: 100%;
    padding: 20px;
    border-radius: 10px;
}

.image-container {
    position: relative;
    text-align: center;
}

.image-container img {
    width: 100%;
    border-radius: var(--border-radius-small);
    animation: fadeIn 0.5s ease-in-out;
}

@media (min-width: 1000px) {
  .image-container img {
      width: 500px;
      height: 500px; 
  }
.recipe {
  display: grid;
  grid-template-columns: 1fr 1fr;
}
.grid-wrap{
  grid-column-start: 1;
}
.information{
  grid-column-start: 2;
  margin-right: 3em;
}
}




@media (min-width: 769px) {

  .summary-details ul {
    display: block; 
  }
}


@media (min-width: 769px) {
  .summary-details {
    display: block;  /* detils are always shown */
  }

  summary::marker{
    content: none;

  }
  summary {
    pointer-events: none;
  }
}


@media (max-width: 768px) {
  .summary-details {
    display: block;
  }
}



.information li  {
  font-size: 18px;
  line-height: 1.8;
  padding: 8px 0;
  color: #333;
  transition: all 0.3s ease;
}

/* responsive for other screen formats */
@media (min-width: 1024px) {
  .information li {
    font-size: 14px;
    line-height: 1.5;
    padding: 5px 0;
    color: unset;
    transition: unset;
  }
}


.info {
    display: flex;
    justify-content: space-around;
    text-align: center;
    padding: 15px;
}


  details {
    margin-bottom: 20px;
    border: var(--color-input-border);
    border-radius: var(--border-radius-medium);
    overflow: hidden;
    transition: box-shadow 0.2s ease, transform 0.3s ease;
    box-shadow: var(--box-shadow);

  }

  details:hover {
    box-shadow: var(--box-shadow);
    transform: scale(1.02);
  }
  
  summary {
    color: #444;
    font-size: 18px;
    font-weight: 600;
padding: 15px 100px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    user-select: none;
    border: none;
    outline: none;
  }
  
  summary:hover {
    background-color: var(--background-recept-cards);
  }

  details[open] summary {
    background-color: var(--background-color-tag-noti);
    color: var(--color-text-white);
  }

/* users who liked the recipe */


/* like function */

.like-form {
    position: static;
    top: 20px;
    right: 20px;
    z-index: 10;
    
}

/* style for the like function */
.like-button {
    background-color: var(--background-recept-cards);
    border: none;
    cursor: pointer;
    border-radius: var(--border-radius-small);
    transition: transform 0.9s ease, fill 0.3s ease;
}

/* static heart */
.like-button svg {
    cursor: pointer;
    width: 24px;
    height: 24px;
    fill: var(--fill-heart-color);
    transition: transform 0.3s ease, fill 0.3s ease;
    padding: 5px;
    border-radius: var(--border-radius-medium);
}

/* animation effect by liking */

.like-button svg:hover{
    fill: var(--background-color-tag-noti);
    transform: scale(1.3);
    transition: 500ms;
}
.like-button:active svg {
    fill: var(--fill-heart-color-hover);
    transition: 700ms;
}
 
.like-button.liked svg {
    fill: var(--fill-heart-color-hover);
    transform: scale(1.1);
}

.user-likes-container {
  border: 1px solid #e0e0e0;
  padding: 20px;
  border-radius: 8px;
  max-width: 300px;
  position: relative;
}

.like-heading {
  color: #2c3e50;
  margin-bottom: 15px;
  font-size: 1.2em;
}





    .notification {
        position: fixed;  
        top: 100px;
        right: -400px; 
        background: var(--background-color-tag-noti);
        color: var(--color-text-white);
        border-radius:var(--border-radius-small);
        font-size: 14px;
        padding-top: 15px;
        padding-left: 10px;
        padding-right: 10px;
        padding-bottom: 15px;
        transition: right 0.5s ease-in-out, opacity 0.5s ease-in-out;  
        box-shadow: var(--box-shadow);
        z-index: 9999;  
        opacity: 0; 
        margin-left: 3em;
      }
      
      .notification.show {
        right: 20px;  
        opacity: 1;  
      }
      
      .notification.hide {
        right: -400px; 
        opacity: 0;   
        pointer-events: none; 
      }
</style>
<script>




  //  like function
    const notification = document.createElement("div");
    
    notification.className="notification";
    document.body.appendChild(notification);
    
    function showNotification(recipeName){
        notification.textContent = `"${recipeName}" added to your favorites`;
        notification.classList.add("show");
        setTimeout(() =>notification.classList.remove("show"), 3000 );
    }
    
    document.querySelectorAll(".like-checkbox").forEach(box => 
        box.addEventListener("change", () => {
            if (box.checked) {
                const receptName = box.closest(".recept").querySelector("h2").textContent;
                showNotification(receptName);
            }
        })
    );

// function for open summary or not 

const detailsList = document.querySelectorAll('.summary-details');  // selected details

if (window.innerWidth > 768) {
  detailsList.forEach(details => {
    details.setAttribute('open', 'true');
  });
} else {
  detailsList.forEach(details => {
    details.removeAttribute('open');
  });
}

window.addEventListener('resize', function() {
  if (window.innerWidth > 768) {
    detailsList.forEach(details => {
      details.setAttribute('open', 'true');
    });
  } else {
    detailsList.forEach(details => {
      details.removeAttribute('open');
    });
  }
});


async function fetchUsersWhoLiked(recipeId) {
    try {
      console.log("Gebruikte recipeId:", recipeId); // Debugging
 
      const response = await fetch(`/users-who-liked/${recipeId}`);
      if (!response.ok) {
        throw new Error('Fout bij het ophalen van gebruikers');
      }
      const users = await response.json();
 
      const usersList = document.getElementById('users-who-liked');
      usersList.innerHTML = users.map(user => `
        <div class="user">
          <span>${user.username}</span>
        </div>
      `).join('');
    } catch (error) {
      console.error("Fout bij het ophalen van gebruikers:", error);
    }
  }
 
  document.addEventListener("DOMContentLoaded", function () {
    const usersList = document.getElementById('users-who-liked');
    const recipeId = usersList.dataset.recipeId; // Haal recipeId op
 
    if (recipeId) {
      fetchUsersWhoLiked(recipeId);
    }
  });


</script>
</body>
</html>



