<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recipes</title>
    <link rel="stylesheet" href="/styles/basis.css">
</head>
<body>
    <%- include('header') %>
    <main>

        <section class="mainscreen-filter">
            <div class="search-bar">
                <h1>What would you like to cook?</h1>
                <form action="/recipes" method="GET">
                    <input type="text" name="q" placeholder="Search for recipe" required>
                    <button type="submit">Search</button>
                </form>
            </div>
        
            <% if (locals.message) { %>
                <p class="error-message"><%= locals.message %></p>
            <% } %>
        
            <ul class="filterbuttons">
                <h2>Filter Options:</h2>
                <li>
                    <div class="dropdown">
                        <button>Mainingredient</button>
                        <ul class="content">
                            <li><a href="?mainingredient=chicken&q=<%= selectedFilters.q || '' %>&servings=<%= selectedFilters.servings || '' %>&preptime=<%= selectedFilters.preptime || '' %>">Chicken</a></li>
                            <li><a href="?mainingredient=cheese&q=<%= selectedFilters.q || '' %>&servings=<%= selectedFilters.servings || '' %>&preptime=<%= selectedFilters.preptime || '' %>">Cheese</a></li>
                            <li><a href="?mainingredient=shrimp&q=<%= selectedFilters.q || '' %>&servings=<%= selectedFilters.servings || '' %>&preptime=<%= selectedFilters.preptime || '' %>">Shrimp</a></li>
                        </ul>
                    </div>
                    
                    <div class="dropdown">
                        <button>Servings</button>
                        <ul class="content">
                            <li><a href="?servings=2&q=<%= selectedFilters.q || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>&preptime=<%= selectedFilters.preptime || '' %>">2 Servings</a></li>
                            <li><a href="?servings=4&q=<%= selectedFilters.q || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>&preptime=<%= selectedFilters.preptime || '' %>">4 Servings</a></li>
                            <li><a href="?servings=6&q=<%= selectedFilters.q || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>&preptime=<%= selectedFilters.preptime || '' %>">6 Servings</a></li>
                            <li><a href="?servings=8&q=<%= selectedFilters.q || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>&preptime=<%= selectedFilters.preptime || '' %>">8 Servings</a></li>
                        </ul>
                    </div>
                    
                    <div class="dropdown">
                        <button>Prep Time</button>
                        <ul class="content">
                            <li><a href="?preptime=15&q=<%= selectedFilters.q || '' %>&servings=<%= selectedFilters.servings || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>">About 15 min</a></li>
                            <li><a href="?preptime=30&q=<%= selectedFilters.q || '' %>&servings=<%= selectedFilters.servings || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>">About 30 min</a></li>
                            <li><a href="?preptime=45&q=<%= selectedFilters.q || '' %>&servings=<%= selectedFilters.servings || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>">About 45 min</a></li>
                            <li><a href="?preptime=60&q=<%= selectedFilters.q || '' %>&servings=<%= selectedFilters.servings || '' %>&mainingredient=<%= selectedFilters.mainingredient || '' %>">About 60 min</a></li>
                        </ul>
                    </div>
                </li>
            </ul>
            
            <div class="selected-filters">
                <h2>Selected filters:</h2>
                <ul>
                    <li>
                        <strong>Search:</strong> <%= selectedFilters.q || 'None' %>
                        <button class="remove-filter" onclick="removeFilter('q')">
                            <img src="/images/x-black.svg" alt="">
                        </button>
                    </li>
                    <li>
                        <strong>Main ingredient:</strong> <%= selectedFilters.mainingredient || 'None' %>
                        <button class="remove-filter" onclick="removeFilter('mainingredient')">
                            <img src="/images/x-black.svg" alt="">
                        </button>
                    </li>
                    <li>
                        <strong>Servings:</strong> <%= selectedFilters.servings || 'None' %>
                        <button class="remove-filter" onclick="removeFilter('servings')">
                            <img src="/images/x-black.svg" alt="">
                        </button>
                    </li>
                    <li>
                        <strong>Time:</strong> <%= selectedFilters.preptime || 'None' %>
                        <button class="remove-filter" onclick="removeFilter('preptime')">
                            <img src="/images/x-black.svg" alt="">
                        </button>
                    </li>
                </ul>
            </div>
            
            
               
        </section>        
    
<div class="recipe-grid-h2">
    <h2>Recipes:</h2>
</div>

            <section class="recipe-grid">
                <% if (recipes && recipes.length > 0) { %> 
                    <% recipes.forEach(recipe => { %>
                        <div class="recipe">
                            <img src="<%= recipe.thumbnail_url || '/images/default-recipe.jpg' %>" alt="Image of the recipe" class="recipe-image">
                            <h3><%= recipe.name %></h3>
                            <p class="recipe-description"><%= recipe.description || "No discription available" %></p>
            
                            <form action="/toggle-like/<%= recipe._id %>" method="POST" class="like-form">
                                <input type="hidden" name="recipeId" value="<%= recipe._id %>">
                                <input type="hidden" name="recipeName" value="<%= recipe.name %>">
                                
                    
                                <button type="submit" class="like-button <%= recipe.isLiked ? 'liked' : '' %>">
                                    <svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M34,9c-4.2,0-7.9,2.1-10,5.4C21.9,11.1,18.2,9,14,9C7.4,9,2,14.4,2,21c0,11.9,22,24,22,24s22-12,22-24
                                            C46,14.4,40.6,9,34,9z"/>
                                    </svg>
                                </button>
                            </form>                            

                            <a href="/recipe/<%= recipe._id %>">
                                <button>Full Recipe</button>
                            </a>
                        
                        </div>
                    <% }) %>
                <% } else { %>
                    <p>No Recipes found.</p>
                <% } %>
            </section>
    </main>

<style>
      .recipe-grid-h2{
    align-items: center;
    display: flex;
    justify-content: center;
  }
.mainscreen-filter {
    padding: 40px;
    max-width: 800px;
    margin: auto;
}
 
.mainscreen-filter h1 {
    font-size: clamp(35px, 4vw, 45px);
}
 
 
/* Zoekbalk */
.search-bar form {
    display: flex;
    gap: 1em;
    justify-content: center;
    align-items: center;
}
 
.search-bar input {
    width: 70%;
    padding: 10px;
    border-radius: var(--border-radius-small);
    border: var(--color-input-border);
    outline: none;
    transition: all 0.5s ease;
    box-shadow: var(--box-shadow);
    cursor: pointer;
}
 
.search-bar input:hover {
border: var(--color-input-border-hover);
  box-shadow: var(--box-shadow);
  }
  
.search-bar input:active {
    transform: scale(1.20);
  }
  
  .search-bar input:focus {
    border: var(--color-input-border-hover);
  }
  .search-bar input:focus::placeholder{
    color: var(--color-text-desktop);
  }
 
.search-bar input::placeholder {
    font-size: 14px;
}
 
.search-bar button {
    border: none;
    background-color: var(--background-color-button);
    color: var(--color-text-white);
    border-radius: var(--border-radius-small);
    cursor: pointer;
    padding: 10px 15px;
    transition: background 0.3s ease;
}
 
.search-bar button:hover {
    background-color: var(--background-color-button-hover);
}
 
/* Filter sectie */
.filterbuttons {
    list-style-type: none;
    display: flex;
    justify-content: center;
    gap: 15px;
    padding: 20px 0;
    flex-wrap: wrap;
}
 
.dropdown {
    position: relative;
    display: inline-block;
}
 
.dropdown button {
    background-color: var(--background-color-tag-noti);
    color: var(--color-text-white);
    padding: 10px 15px;
    border: none;
    cursor: pointer;
    border-radius: var(--border-radius-medium);
    transition: background 0.3s ease;
    position: relative; /* Om het pijltje goed te kunnen positioneren */
 
}
 
.dropdown button:hover {
    background-color: var(--background-color-tag-noti-hover);
}
 
.dropdown button::after {
    content: '▼';  /* Unicode teken voor een naar beneden wijzend pijltje */
    font-size: 12px;
    margin-left: 10px;  /* Ruimte tussen tekst en pijltje */
    transition: transform 0.3s ease; /* Animatie voor pijltje */
}
 
.dropdown.open button::after {
    transform: rotate(180deg);
    content: '▲';/* Draai het pijltje als de dropdown 'open' is */
}
 
 
 
.dropdown .content {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    min-width: 160px;
    background-color: var(--background-white);
    box-shadow: var(--box-shadow);
    border-radius: var(--border-radius-medium);
    padding: 5px 0;
    opacity: 0;
    transform: translateY(-5px);
    transition: opacity 0.3s ease, transform 0.3s ease;
    z-index: 2;
}
 
.dropdown .content li {
    list-style-type: none;
    padding: 0;
}
 
.dropdown .content a {
    display: block;
    text-decoration: none;
    padding: 10px;
    color: var(--color-text);
    transition: background 0.3s ease;
    border-radius: var(--border-radius-small);
    margin: 2px 10px;
}
 
.dropdown .content a:hover {
    background-color: var(--background-color-hover-filter);
}
 
.dropdown:focus-within .content {
    display: block;
    opacity: 1;
    transform: translateY(0);
}
 
/* selected filters */
.selected-filters {
    text-align: center;
    margin-top: 20px;
}
 
.selected-filters h3 {
    font-size: 18px;
    margin-bottom: 10px;
}
 
.selected-filters ul {
    display: flex;
    justify-content: center;
    gap: 15px;
    font-size: 14px;
    list-style: none;
    padding: 0;
    flex-wrap: wrap;
}
 
.selected-filters li{
    --background-color-hover-filter: #ffefca;
    padding: 10px 8px;
    box-shadow: var(--box-shadow);
    border-radius: var(--border-radius-medium);
}
 
.selected-filters button{
background-color: transparent;
border: none;
}
.selected-filters img{
width: 10px;
   }
   
 
.selected-filters {
    display: none;
}
 
.selected-filters li {
    display: none;
}
 
.recipe-grid-h2{
    align-items: center;
    display: flex;  
    justify-content: center;
 
}
 


 /* Like function */
.like-form {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 10;
}

/* style for the like function */
.like-button {
    background-color: var(--background-recept-cards);
    border: none;
    cursor: pointer;
    border-radius: var(--border-radius-small);
    transition: transform 0.9s ease, fill 0.3s ease;
}

/* static heart */
.like-button svg {
    cursor: pointer;
    width: 24px;
    height: 24px;
    fill: var(--fill-heart-color);
    transition: transform 0.3s ease, fill 0.3s ease;
    padding: 5px;
    border-radius: var(--border-radius-medium);
}

/* animation effect by liking */

.like-button svg:hover{
    fill: var(--background-color-tag-noti);
    transform: scale(1.3);
    transition: 500ms;
}
.like-button:active svg {
    fill: var(--fill-heart-color-hover);
    transition: 700ms;
}
 
.like-button.liked svg {
    fill: var(--fill-heart-color-hover);
    transform: scale(1.1);
}
 
 
 
 
.recipe-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 50px;
    padding: 20px;
    }
    
    .recipe {
    position: relative;
    display: flex;
    flex-direction: column;
    background: var(--background-recept-cards);
    padding: 15px;
    border-radius: 10px;
    box-shadow: var(--box-shadow);
    }
    
    .recipe h3 {
    margin-top: 20px;
    font-size: 18px;
    font-weight: bold;
    }
    
    .recipe-description {
    font-size: 14px;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2; /* Laat alleen maar  regels zien (van chat) */
    overflow: hidden;
    }
    
    .recipe a button {
    background-color: var(--background-color-button);
    color: var(--text-color-button);
    border: none;
    padding: 10px;
    width: 100%;
    border-radius: var(--border-radius-small);
    cursor: pointer;
    margin-top: auto;
    }
    
    .recipe a button:hover {
    background-color: var(--background-color-button-hover);
    }
    
    .recipe-image {
      width: 100%;             /* Zorgt ervoor dat de afbeelding de breedte van de container gebruikt */
      height: 250px;           /* Stel de hoogte in (pas aan naar de gewenste hoogte) */
      object-fit: cover;
    border-radius: var(--border-radius-big);
    position: relative; }
    
   
    /* notication */
    .notification {
  position: fixed;  
  top: 100px;
  right: -400px;
  background: rgba(128, 128, 128, 0.4);
  color: var(--color-text-white);  
  border-radius: var(--border-radius-small);
  font-size: 14px;
  padding-top: 15px;
  padding-left: 10px;
  padding-right: 10px;
  padding-bottom: 15px;
  transition: right 0.5s ease-in-out, opacity 0.5s ease-in-out;  
  box-shadow: var(--box-shadow);
  z-index: 9999;  
  opacity: 0;
  margin-left: 3em;
}

.notification.show {
  right: 20px;  
  opacity: 1;  
}

.notification.hide {
  right: -400px;
  opacity: 0;   
}
</style>
<script>
    // gedeelte like notificatie
    const notification = document.createElement("div");
    
    notification.className="notification";
    document.body.appendChild(notification);
    
    function showNotification(recipeName){
        notification.textContent = `"${recipeName}" is toegevoegd aan je favorieten !`;
        notification.classList.add("show");
        setTimeout(() =>notification.classList.remove("show"), 3000 );
    }
    
    document.querySelectorAll(".like-checkbox").forEach(box =>
        box.addEventListener("change", () => {
            if (box.checked) {
                const receptName = box.closest(".recipe").querySelector("h2").textContent;
                showNotification(receptName);
            }
        })
    );
    
function removeFilter(filter) {
        // Haal de huidige query parameters op
        const urlParams = new URLSearchParams(window.location.search);

        // Verwijder de opgegeven filter uit de query parameters
        urlParams.delete(filter);

        // Update de URL met de gewijzigde query parameters
        const newUrl = window.location.pathname + '?' + urlParams.toString();

        // Laad de nieuwe URL om de filters toe te passen
        window.location.href = newUrl;
    }

    document.addEventListener("DOMContentLoaded", function () {
document.querySelectorAll('.dropdown button').forEach(button => {
    button.addEventListener('click', function () {
        const dropdown = this.closest('.dropdown');
        
        // Sluit alle dropdowns behalve degene waarop geklikt is
        document.querySelectorAll('.dropdown').forEach(d => {
            if (d !== dropdown) {
                d.classList.remove('open');
            }
        });

        // Toggle de huidige dropdown
        dropdown.classList.toggle('open');
    });
});

// Sluit de dropdown als je ergens anders klikt
document.addEventListener('click', function (event) {
    if (!event.target.closest('.dropdown')) {
        document.querySelectorAll('.dropdown').forEach(d => d.classList.remove('open'));
    }
});
});

                    // Geef de gebruiker feedback
                    try {
    if (data.success) {
        showNotification(`recipe ${recipeName} is ${action === 'like' ? 'toegevoegd aan' : 'verwijderd uit'} je favorieten!`);
    } else {
        showNotification("Er is een fout opgetreden.");
        box.checked = !box.checked;
    }
} catch (error) {
    console.error('Error:', error);
    showNotification("You're not signed in yet..");
    box.checked = !box.checked;
}




    // gedeelte selected filter
    function updateFiltersVisibility() {
const filtersContainer = document.querySelector('.selected-filters');
const filterItems = document.querySelectorAll('.selected-filters li');

let hasFilters = false;

filterItems.forEach(filter => {
    // Haal de tekst op en controleer of het geen 'None' is
    if (!filter.textContent.includes('None')) {
        filter.style.display = 'list-item'; // Toon alleen de actieve filters
        hasFilters = true;
    } else {
        filter.style.display = 'none'; // Verberg filters zonder waarde
    }
});

// Toon de container alleen als er filters zijn
filtersContainer.style.display = hasFilters ? 'block' : 'none';
}

// Roep deze functie aan zodra de pagina laadt
document.addEventListener('DOMContentLoaded', updateFiltersVisibility);

// gedeelte selected filter


function removeFilter(filterType) {
// Verwijder de waarde uit het object (of je data-opslag)
selectedFilters[filterType] = 'None';

// Update de UI
updateFiltersVisibility();
}
</script>
</body>
</html>
